{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Soup",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include":"#comments_inline"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#paren-expression"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.soup",
				"match": "\\b(Soup|soup|if|while|for|return)\\b"
			},
			{
				"name":"keyword.other",
				"match": "\\b(def|mal)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.soup",
			"begin": "`",
			"end": "`",
			"patterns": [
				{
					"include": "#strings_single"
				},
				{
					"include": "#strings_double"
				}
			]
		},
		"strings_single": {
			"name": "string.quoted.double.soup",
			"begin": "'",
			"end": "'"
		},
		"strings_double": {
			"name": "string.quoted.double.soup",
			"begin": "\"",
			"end": "\""
		},
		"paren-expression": {
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
			  "0": { "name": "punctuation.paren.open" }
			},
			"endCaptures": {
			  "0": { "name": "punctuation.paren.close" }
			},
			"name": "expression.group",
			"patterns": [{ "include": "#expression" }]
		},
		"comments": {
			"name": "comment.block",
			"begin": "-\\?",
			"end": "\\?-",
			"captures": {
				"0": {
				"name": "punctuation.definition.comment"
				}
			},
			"patterns": [
				{
					"include":"#comments_inline"
				}
			]
		},
		"comments_inline": {
			"patterns": [
				{
					"name": "comment.line",
					"match": "\\?\\?.*",
					"captures": {
						"0": {
					  "name": "punctuation.definition.comment"
					}
				}
			}
		]			
	},
	"functions": {
		  "patterns": [
			{
				"name": "support.function",
				"match": "\\b([^0-9=+-_~`!@#$%&*()\"']|[a-zA-Z])+[a-zA-Z0-9_]+[(]"
			},
			{
				"name": "variable",
				"match": "\\b[^0-9=+-_~`!@#$%&*()\"']+[a-zA-Z0-9_]*\\b"
			},
			{
				"name": "constant.character",
				"match": "\\b([^0-9=+-_~`!@#$%&*()\"'a-z]|[A-Z])+[A-Z0-9_]*\\b"
			}
		  ]
	},
	"operators":{
		"patterns": [
			{
				"name": "keyword.operator.arithmetic",
				"match": "[+\\-*/%]"
			},
			{
				  "name": "keyword.operator.comparison",
				  "match": "[!=]==?|[<>]=?"
				},
				{
				  "name": "keyword.operator.logical",
				  "match": "[!&|]"
				}
			  ]
		},
		"numbers": {
			"patterns": [
				{
				  "name": "constant.numeric.integer",
				  "match": "\\b\\d+\\b"
				},
				{
				  "name": "constant.numeric.decimal",
				  "match": "\\b\\d+\\.\\d+\\b"
				},
				{
				  "name": "constant.numeric.scientific",
				  "match": "\\b\\d+\\.?\\d*[+-]?\\d+\\b"
				}
			  ]
		}
		
	},
	"scopeName": "source.soup"
}